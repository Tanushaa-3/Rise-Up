import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./Home.css";

export default function HomePage() {
  const navigate = useNavigate();
  const [language, setLanguage] = useState("english"); // Default language

// HomePage.js (updated)
// Keep previous imports and component structure, adding these background elements:

<section className="hero animate-on-scroll">
  <div className="hero-overlay"></div>
  <div className="hero-content">
    {/* ... existing hero content ... */}
  </div>
</section>

{/* Add this new section before features */}
<section className="stats">
  <div className="stat-item">
    <h3>1000+</h3>
    <p>Courses Available</p>
  </div>
  <div className="stat-item">
    <h3>500+</h3>
    <p>Career Opportunities</p>
  </div>
  <div className="stat-item">
    <h3>200+</h3>
    <p>Expert Mentors</p>
  </div>
</section>


  // Content for all languages
  const content = {
    english: {
      hero: {
        title: "Fostering Growth in Youth Through Education and Career Opportunities",
        description: "RiseUp helps young people learn new skills, find jobs, and connect with mentors.",
        button: "Get Started"
      },
      journey: {
        title: "Your Journey with RiseUp"
      },
      slides: [
        { id: 1, title: "Courses", description: "Start with learning new skills through our curated courses" },
        { id: 2, title: "Job Listings", description: "Find opportunities that match your new skills" },
        { id: 3, title: "Beyond Tech", description: "Explore non-technical skills to complement your expertise" },
        { id: 4, title: "Self Assessment", description: "Test your knowledge and identify areas for improvement" },
        { id: 5, title: "Mock Interviews", description: "Practice and prepare for real-world interviews" },
        { id: 6, title: "Community", description: "Connect with peers and mentors in our growing network" },
      ],
      about: {
        title: "About RiseUp",
        description: "RiseUp is a platform designed to bridge the gap between education and employment. We provide skill-based learning, career opportunities, and mentorship to help young professionals succeed."
      },
      features: {
        title: "Why Choose RiseUp?",
        cards: [
          { icon: "ЁЯУЪ", title: "Personalized Learning", description: "Access courses tailored to your career goals." },
          { icon: "ЁЯТ╝", title: "Job Opportunities", description: "Find and apply for jobs that match your skills." },
          { icon: "ЁЯдЭ", title: "Mentorship & Networking", description: "Connect with industry experts and professionals." }
        ]
      },
      cta: {
        title: "Join RiseUp Today",
        description: "Start your journey towards a brighter future."
      }
    },
    hindi: {
      hero: {
        title: "рд╢рд┐рдХреНрд╖рд╛ рдФрд░ рдХрд░рд┐рдпрд░ рдХреЗ рдЕрд╡рд╕рд░реЛрдВ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдпреБрд╡рд╛рдУрдВ рдореЗрдВ рд╡рд┐рдХрд╛рд╕ рдХреЛ рдмрдврд╝рд╛рд╡рд╛ рджреЗрдирд╛",
        description: "рд░рд╛рдЗрдЬрд╝рдЕрдк рдпреБрд╡рд╛рдУрдВ рдХреЛ рдирдП рдХреМрд╢рд▓ рд╕реАрдЦрдиреЗ, рдиреМрдХрд░рд┐рдпрд╛рдВ рдЦреЛрдЬрдиреЗ рдФрд░ рдореЗрдВрдЯрд░реНрд╕ рд╕реЗ рдЬреБрдбрд╝рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред",
        button: "рд╢реБрд░реВ рдХрд░реЗрдВ"
      },
      journey: {
        title: "рд░рд╛рдЗрдЬрд╝рдЕрдк рдХреЗ рд╕рд╛рде рдЖрдкрдХреА рдпрд╛рддреНрд░рд╛"
      },
      slides: [
        { id: 1, title: "рдкрд╛рдареНрдпрдХреНрд░рдо", description: "рд╣рдорд╛рд░реЗ рдХреНрдпреВрд░реЗрдЯреЗрдб рдкрд╛рдареНрдпрдХреНрд░рдореЛрдВ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдирдП рдХреМрд╢рд▓ рд╕реАрдЦрдирд╛ рд╢реБрд░реВ рдХрд░реЗрдВ" },
        { id: 2, title: "рдиреМрдХрд░реА рд╕реВрдЪрд┐рдпрд╛рдБ", description: "рдЕрдкрдиреЗ рдирдП рдХреМрд╢рд▓ рд╕реЗ рдореЗрд▓ рдЦрд╛рдиреЗ рд╡рд╛рд▓реЗ рдЕрд╡рд╕рд░ рдЦреЛрдЬреЗрдВ" },
        { id: 3, title: "рддрдХрдиреАрдХ рд╕реЗ рдкрд░реЗ", description: "рдЕрдкрдиреА рд╡рд┐рд╢реЗрд╖рдЬреНрдЮрддрд╛ рдХреЛ рдкреВрд░рдХ рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЧреИрд░-рддрдХрдиреАрдХреА рдХреМрд╢рд▓ рдХрд╛ рдЕрдиреНрд╡реЗрд╖рдг рдХрд░реЗрдВ" },
        { id: 4, title: "рд╕реНрд╡-рдореВрд▓реНрдпрд╛рдВрдХрди", description: "рдЕрдкрдиреЗ рдЬреНрдЮрд╛рди рдХрд╛ рдкрд░реАрдХреНрд╖рдг рдХрд░реЗрдВ рдФрд░ рд╕реБрдзрд╛рд░ рдХреЗ рдХреНрд╖реЗрддреНрд░реЛрдВ рдХреА рдкрд╣рдЪрд╛рди рдХрд░реЗрдВ" },
        { id: 5, title: "рдореЙрдХ рдЗрдВрдЯрд░рд╡реНрдпреВ", description: "рд╡рд╛рд╕реНрддрд╡рд┐рдХ рджреБрдирд┐рдпрд╛ рдХреЗ рд╕рд╛рдХреНрд╖рд╛рддреНрдХрд╛рд░ рдХреЗ рд▓рд┐рдП рдЕрднреНрдпрд╛рд╕ рдХрд░реЗрдВ рдФрд░ рддреИрдпрд╛рд░реА рдХрд░реЗрдВ" },
        { id: 6, title: "рд╕рдореБрджрд╛рдп", description: "рд╣рдорд╛рд░реЗ рдмрдврд╝рддреЗ рдиреЗрдЯрд╡рд░реНрдХ рдореЗрдВ рд╕рд╛рдерд┐рдпреЛрдВ рдФрд░ рдореЗрдВрдЯрд░реНрд╕ рд╕реЗ рдЬреБрдбрд╝реЗрдВ" },
      ],
      about: {
        title: "рд░рд╛рдЗрдЬрд╝рдЕрдк рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ",
        description: "рд░рд╛рдЗрдЬрд╝рдЕрдк рдПрдХ рдРрд╕рд╛ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рд╣реИ рдЬреЛ рд╢рд┐рдХреНрд╖рд╛ рдФрд░ рд░реЛрдЬрдЧрд╛рд░ рдХреЗ рдмреАрдЪ рдХреА рдЦрд╛рдИ рдХреЛ рдкрд╛рдЯрдиреЗ рдХреЗ рд▓рд┐рдП рдбрд┐рдЬрд╝рд╛рдЗрди рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред рд╣рдо рдпреБрд╡рд╛ рдкреЗрд╢реЗрд╡рд░реЛрдВ рдХреЛ рд╕рдлрд▓ рд╣реЛрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХреМрд╢рд▓-рдЖрдзрд╛рд░рд┐рдд рд╕реАрдЦрдиреЗ, рдХрд░рд┐рдпрд░ рдХреЗ рдЕрд╡рд╕рд░ рдФрд░ рдореЗрдВрдЯрд░рд╢рд┐рдк рдкреНрд░рджрд╛рди рдХрд░рддреЗ рд╣реИрдВред"
      },
      features: {
        title: "рд░рд╛рдЗрдЬрд╝рдЕрдк рдХреНрдпреЛрдВ рдЪреБрдиреЗрдВ?",
        cards: [
          { icon: "ЁЯУЪ", title: "рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╢рд┐рдХреНрд╖рд╛", description: "рдЕрдкрдиреЗ рдХрд░рд┐рдпрд░ рд▓рдХреНрд╖реНрдпреЛрдВ рдХреЗ рдЕрдиреБрд░реВрдк рдкрд╛рдареНрдпрдХреНрд░рдореЛрдВ рддрдХ рдкрд╣реБрдВрдЪреЗрдВред" },
          { icon: "ЁЯТ╝", title: "рдиреМрдХрд░реА рдХреЗ рдЕрд╡рд╕рд░", description: "рдЕрдкрдиреЗ рдХреМрд╢рд▓ рд╕реЗ рдореЗрд▓ рдЦрд╛рдиреЗ рд╡рд╛рд▓реА рдиреМрдХрд░рд┐рдпрд╛рдВ рдЦреЛрдЬреЗрдВ рдФрд░ рдЖрд╡реЗрджрди рдХрд░реЗрдВред" },
          { icon: "ЁЯдЭ", title: "рдореЗрдВрдЯрд░рд╢рд┐рдк рдФрд░ рдиреЗрдЯрд╡рд░реНрдХрд┐рдВрдЧ", description: "рдЙрджреНрдпреЛрдЧ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮреЛрдВ рдФрд░ рдкреЗрд╢реЗрд╡рд░реЛрдВ рд╕реЗ рдЬреБрдбрд╝реЗрдВред" }
        ]
      },
      cta: {
        title: "рдЖрдЬ рд╣реА рд░рд╛рдЗрдЬрд╝рдЕрдк рд╕реЗ рдЬреБрдбрд╝реЗрдВ",
        description: "рдПрдХ рдЙрдЬреНрдЬрд╡рд▓ рднрд╡рд┐рд╖реНрдп рдХреА рдУрд░ рдЕрдкрдиреА рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХрд░реЗрдВред"
      }
    },
    marathi: {
      hero: {
        title: "рд╢рд┐рдХреНрд╖рдг рдЖрдгрд┐ рдХрд░рд┐рдЕрд░ рд╕рдВрдзреАрдВрдЪреНрдпрд╛ рдорд╛рдзреНрдпрдорд╛рддреВрди рддрд░реБрдгрд╛рдВрдЪреНрдпрд╛ рд╡рд┐рдХрд╛рд╕рд╛рд▓рд╛ рдЪрд╛рд▓рдирд╛ рджреЗрдгреЗ",
        description: "рд░рд╛рдЗрдЬрдЕрдк рддрд░реБрдгрд╛рдВрдирд╛ рдирд╡реАрди рдХреМрд╢рд▓реНрдпреЗ рд╢рд┐рдХрдгреНрдпрд╛рд╕, рдиреЛрдХрд▒реНрдпрд╛ рд╢реЛрдзрдгреНрдпрд╛рд╕ рдЖрдгрд┐ рдорд╛рд░реНрдЧрджрд░реНрд╢рдХрд╛рдВрд╢реА рдЬреЛрдбрдгреНрдпрд╛рд╕ рдорджрдд рдХрд░рддреЗ.",
        button: "рд╕реБрд░реВ рдХрд░рд╛"
      },
      journey: {
        title: "рд░рд╛рдЗрдЬрдЕрдкрд╕рд╣ рддреБрдордЪрд╛ рдкреНрд░рд╡рд╛рд╕"
      },
      slides: [
        { id: 1, title: "рдЕрднреНрдпрд╛рд╕рдХреНрд░рдо", description: "рдЖрдордЪреНрдпрд╛ рдирд┐рд╡рдбрд▓реЗрд▓реНрдпрд╛ рдЕрднреНрдпрд╛рд╕рдХреНрд░рдорд╛рдВрджреНрд╡рд╛рд░реЗ рдирд╡реАрди рдХреМрд╢рд▓реНрдпреЗ рд╢рд┐рдХрдгреНрдпрд╛рдкрд╛рд╕реВрди рд╕реБрд░реБрд╡рд╛рдд рдХрд░рд╛" },
        { id: 2, title: "рдиреЛрдХрд░реА рдЬрд╛рд╣рд┐рд░рд╛рддреА", description: "рддреБрдордЪреНрдпрд╛ рдирд╡реАрди рдХреМрд╢рд▓реНрдпрд╛рдВрд╢реА рдЬреБрд│рдгрд╛рд▒реНрдпрд╛ рд╕рдВрдзреА рд╢реЛрдзрд╛" },
        { id: 3, title: "рддрдВрддреНрд░рдЬреНрдЮрд╛рдирд╛рдкрд▓реАрдХрдбреЗ", description: "рддреБрдордЪреНрдпрд╛ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮрддреЗрд▓рд╛ рдкреВрд░рдХ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдиреЙрди-рдЯреЗрдХреНрдирд┐рдХрд▓ рдХреМрд╢рд▓реНрдпрд╛рдВрдЪрд╛ рд╢реЛрдз рдШреНрдпрд╛" },
        { id: 4, title: "рд╕реНрд╡-рдореВрд▓реНрдпрд╛рдВрдХрди", description: "рддреБрдордЪреНрдпрд╛ рдЬреНрдЮрд╛рдирд╛рдЪреА рдЪрд╛рдЪрдгреА рдШреНрдпрд╛ рдЖрдгрд┐ рд╕реБрдзрд╛рд░рдгреЗрдЪреНрдпрд╛ рдХреНрд╖реЗрддреНрд░рд╛рдВрдЪреА рдУрд│рдЦ рдХрд░рд╛" },
        { id: 5, title: "рдореЙрдХ рдореБрд▓рд╛рдЦрддреА", description: "рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдЬрдЧрд╛рддреАрд▓ рдореБрд▓рд╛рдЦрддреАрдВрд╕рд╛рдареА рд╕рд░рд╛рд╡ рдХрд░рд╛ рдЖрдгрд┐ рддрдпрд╛рд░реА рдХрд░рд╛" },
        { id: 6, title: "рд╕рдореБрджрд╛рдп", description: "рдЖрдордЪреНрдпрд╛ рд╡рд╛рдврддреНрдпрд╛ рдиреЗрдЯрд╡рд░реНрдХрдордзреНрдпреЗ рд╕рд╣рдХрд╛рд░реА рдЖрдгрд┐ рдорд╛рд░реНрдЧрджрд░реНрд╢рдХрд╛рдВрд╢реА рдЬреЛрдбрд╛" },
      ],
      about: {
        title: "рд░рд╛рдЗрдЬрдЕрдк рдмрджреНрджрд▓",
        description: "рд░рд╛рдЗрдЬрдЕрдк рд╣реЗ рд╢рд┐рдХреНрд╖рдг рдЖрдгрд┐ рд░реЛрдЬрдЧрд╛рд░ рдпрд╛рдВрдЪреНрдпрд╛рддреАрд▓ рдЕрдВрддрд░ рдХрдореА рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдбрд┐рдЭрд╛рдЗрди рдХреЗрд▓реЗрд▓реЗ рдкреНрд▓реЕрдЯрдлреЙрд░реНрдо рдЖрд╣реЗ. рдЖрдореНрд╣реА рддрд░реБрдг рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХрд╛рдВрдирд╛ рдпрд╢рд╕реНрд╡реА рд╣реЛрдгреНрдпрд╛рд╕ рдорджрдд рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдХреМрд╢рд▓реНрдп-рдЖрдзрд╛рд░рд┐рдд рд╢рд┐рдХреНрд╖рдг, рдХрд░рд┐рдЕрд░рдЪреНрдпрд╛ рд╕рдВрдзреА рдЖрдгрд┐ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдкреНрд░рджрд╛рди рдХрд░рддреЛ."
      },
      features: {
        title: "рд░рд╛рдЗрдЬрдЕрдк рдХрд╛ рдирд┐рд╡рдбрд╛рд╡реЗ?",
        cards: [
          { icon: "ЁЯУЪ", title: "рд╡реИрдпрдХреНрддрд┐рдХ рд╢рд┐рдХреНрд╖рдг", description: "рддреБрдордЪреНрдпрд╛ рдХрд░рд┐рдЕрд░рдЪреНрдпрд╛ рдЙрджреНрджрд┐рд╖реНрдЯрд╛рдВрдиреБрд╕рд╛рд░ рдЕрднреНрдпрд╛рд╕рдХреНрд░рдорд╛рдВрдордзреНрдпреЗ рдкреНрд░рд╡реЗрд╢ рдХрд░рд╛." },
          { icon: "ЁЯТ╝", title: "рдиреЛрдХрд░реАрдЪреНрдпрд╛ рд╕рдВрдзреА", description: "рддреБрдордЪреНрдпрд╛ рдХреМрд╢рд▓реНрдпрд╛рдВрд╢реА рдЬреБрд│рдгрд╛рд▒реНрдпрд╛ рдиреЛрдХрд▒реНрдпрд╛ рд╢реЛрдзрд╛ рдЖрдгрд┐ рдЕрд░реНрдЬ рдХрд░рд╛." },
          { icon: "ЁЯдЭ", title: "рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдЖрдгрд┐ рдиреЗрдЯрд╡рд░реНрдХрд┐рдВрдЧ", description: "рдЙрджреНрдпреЛрдЧрд╛рддреАрд▓ рддрдЬреНрдЮ рдЖрдгрд┐ рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХрд╛рдВрд╢реА рдЬреЛрдбрд╛." }
        ]
      },
      cta: {
        title: "рдЖрдЬ рд░рд╛рдЗрдЬрдЕрдкрдордзреНрдпреЗ рд╕рд╛рдореАрд▓ рд╡реНрд╣рд╛",
        description: "рдЙрдЬреНрдЬреНрд╡рд▓ рднрд╡рд┐рд╖реНрдпрд╛рдХрдбреЗ рддреБрдордЪрд╛ рдкреНрд░рд╡рд╛рд╕ рд╕реБрд░реВ рдХрд░рд╛."
      }
    }
  };

  // Language selector function
  const changeLanguage = (selectedLanguage) => {
    setLanguage(selectedLanguage);
  };

  const navigateToCourses = () => {
    navigate("/courses");
  };

  // Get current language content
  const currentContent = content[language];

  return (
    <div className="homepage">
      {/* Language Toggle NavLinks */}
      <nav className="language-nav">
        <div className="language-options">
        <button 
  style={{ 
    padding: '10px 20px', 
    margin: '5px',
    borderRadius: '4px', 
    backgroundColor: language === 'english' ? '#da0000' : '#f0f0f0', 
    color: language === 'english' ? 'white' : 'black' 
  }}
  onClick={() => changeLanguage('english')}
>
  English
</button>
<button 
  style={{ 
    padding: '10px 20px', 
    margin: '5px', 
    borderRadius: '4px', 
    backgroundColor: language === 'hindi' ? '#da0000' : '#f0f0f0', 
    color: language === 'hindi' ? 'white' : 'black' 
  }}
  onClick={() => changeLanguage('hindi')}
>
рд╣рд┐рдВрджреА
</button>
<button 
  style={{ 
    padding: '10px 20px', 
    margin: '5px', 
    borderRadius: '4px', 
    backgroundColor: language === 'marathi' ? '#da0000' : '#f0f0f0', 
    color: language === 'marathi' ? 'white' : 'black' 
  }}
  onClick={() => changeLanguage('marathi')}
>
рдорд░рд╛рдареА
</button>

     

        </div>
      </nav>

      {/* Hero Section */}
      <section className="hero">
        <div className="hero-content">
          <h1>{currentContent.hero.title}</h1>
          <p>{currentContent.hero.description}</p>
          <button className="cta-button" onClick={navigateToCourses}>
            {currentContent.hero.button}
          </button>
        </div>
      </section>

      {/* Flow Slideshow Section */}
      <section className="flow-slideshow">
        <h2>{currentContent.journey.title}</h2>
        <div className="slideshow-container">
          {currentContent.slides.map((slide, index) => (
            <div key={slide.id} className={`slide slide-${index + 1}`}>
              <div className="slide-number">{slide.id}</div>
              <h3>{slide.title}</h3>
              <p>{slide.description}</p>
            </div>
          ))}
        </div>
      </section>

      {/* About Section */}
      <section className="about">
        <h2>{currentContent.about.title}</h2>
        <p>{currentContent.about.description}</p>
      </section>

      {/* Key Features */}
      <section className="features">
        <h2>{currentContent.features.title}</h2>
        <div className="feature-cards">
          {currentContent.features.cards.map((card, index) => (
            <div key={index} className="feature-card">
              <h3>{card.icon} {card.title}</h3>
              <p>{card.description}</p>
            </div>
          ))}
        </div>
      </section>

      {/* Call to Action */}
      <section className="cta">
        <h2>{currentContent.cta.title}</h2>
        <p>{currentContent.cta.description}</p>
      </section>
    </div>
  );
}